version: '3.3'

services:
  app_db:
    build: ./db_api
    command: python -u app.py
    container_name: app_db
    image: db_api:v0.2.0-alpha 
    ports:
      - "5000:5000"
    volumes:
      - app_db:/app/db      #TODO Revisar la correcta implementacion de volumes
    links:
      - db
    environment:
      - API_KEY=dW4gY2hpc3Rl #FIXME Hay que quitar esto de aqui y ponerlo en un archivo .env dentro de la carpeta correspondiente.
      - API_KEY_NAME=key     #FIXME Hay que quitar esto de aqui y ponerlo en un archivo .env dentro de la carpeta correspondiente.
    networks:
      - backend-network
      - db-network
      
  app_df:
    build: ./df_api
    command: python -u app.py
    container_name: app_df
    image: df_api:v0.1.0-alpha     
    ports:
      - "8000:8000"
    volumes:
      - app_db:/app/db
    links:
      - db
    environment:
      - API_KEY=dW4gY2hpc3Rl #FIXME Hay que quitar esto de aqui y ponerlo en un archivo .env dentro de la carpeta correspondiente.
      - API_KEY_NAME=key     #FIXME Hay que quitar esto de aqui y ponerlo en un archivo .env dentro de la carpeta correspondiente.
    networks:
      - backend-network

  db:
    image: mongo:latest
    hostname: test_mongodb
    environment:
      - MONGO_INITDB_DATABASE=face_recognition_db #FIXME Hay que quitar esto de aqui y ponerlo en un archivo .env dentro de la carpeta correspondiente.
      - MONGO_INITDB_ROOT_USERNAME=root           #FIXME Hay que quitar esto de aqui y ponerlo en un archivo .env dentro de la carpeta correspondiente.
      - MONGO_INITDB_ROOT_PASSWORD=pass           #FIXME Hay que quitar esto de aqui y ponerlo en un archivo .env dentro de la carpeta correspondiente.
    volumes:
      - mongodbdata:/data/db
    ports:
      - 27017:27017
    networks:
      - db-network

  admin_ui_app:
    container_name: admin_ui
    image: admin_ui:v0.2.2-alpha  
    build:
      context: admin_ui
      dockerfile: Dockerfile
    ports:
      - "5001:3000"
    networks:
      - backend-network
    depends_on:
      - app_db
    env_file:                 
      - prod.env

volumes:
  app_db:
  mongodbdata:

networks:
  backend-network:
    driver: bridge
  db-network:
    driver: bridge